{"content":"import React, { Fragment, useMemo, useRef, useEffect } from 'react';\nimport { useNavScroll } from 'react-use-navscroll';\nimport { ArticleIntro } from '../atoms/Intro';\nimport { Article } from '../atoms/Article';\n\nconst POINTS = 1000;\nexport const PerformancePage = () => {\n  const { register, isActive, activeIds, getActiveRef } = useNavScroll();\n  const menuRef = useRef(null);\n  const getActiveMark = (id) => (isActive(id) ? ' (active)' : '');\n\n  const urlSearchParams = new URLSearchParams(window.location.search);\n  const params = Object.fromEntries(urlSearchParams.entries());\n  const arr = useMemo(() => {\n    const points = parseInt(params.points, 10);\n    return Array(Number.isNaN(points) ? POINTS : points).fill(1);\n  }, [params.points]);\n\n  useEffect(() => {\n    const id = activeIds && activeIds[activeIds.length - 1];\n    if (id) {\n      const el = document.querySelector('#' + id.replace('nested', 'anchor'));\n      if (el) {\n        el.scrollIntoView(false);\n      }\n    }\n  }, [activeIds]);\n\n  return (\n    <div className='md-9 col'>\n      <div className='section'>\n        <h2>Navscroll with long sidebar</h2>\n        <div className='row'>\n          <div className='md-4 col'>\n            <ol\n              className='sticky'\n              style={{ overflowY: 'scroll', height: 'calc(100vh - 80px)' }}\n              ref={menuRef}\n            >\n              {arr.map((_, index) => (\n                <li key={index} id={`anchor_${index}`}>\n                  <a href={`#nested_${index}`}>\n                    Article {index + 1}\n                    {getActiveMark(`nested_${index}`)}\n                  </a>\n                </li>\n              ))}\n            </ol>\n          </div>\n          <div className='md-8 col'>\n            <div className='row flex-right sticky'>\n              <div className='col'>\n                <div className='paper'>\n                  Current active: {getActiveRef()?.current.textContent}\n                </div>\n              </div>\n            </div>\n            <div className='paper'>\n              <article className='article'>\n                <ArticleIntro />\n                {arr.map((_, index) => (\n                  <Fragment key={index}>\n                    <h2\n                      className='article-title'\n                      {...register(`nested_${index}`)}\n                    >\n                      Article {index + 1}\n                    </h2>\n                    <Article />\n                  </Fragment>\n                ))}\n              </article>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"}